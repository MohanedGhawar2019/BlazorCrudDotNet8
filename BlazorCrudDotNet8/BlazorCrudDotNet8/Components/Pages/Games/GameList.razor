@page "/games"
@attribute [StreamRendering(true)]
@inject IUnitOfWork<Game> _game

<h3>GameList</h3>
<CreateButton />

@if (games == null)
{
    <div class="loaderContainer">
        <div class="loader">
            <div class="inner_loader"></div>
            <div class="inner_loader"></div>
            <div class="inner_loader"></div>
            <div class="inner_loader"></div>
            <div class="inner_loader"></div>
            <div class="inner_loader"></div>
            <div class="inner_loader"></div>
            <div class="inner_loader"></div>
            <div class="inner_loader"></div>
            <div class="inner_loader"></div>
            <div class="inner_loader"></div>
            <div class="inner_loader"></div>
            <div class="inner_loader"></div>
            <div class="inner_loader"></div>
            <div class="inner_loader"></div>
            <div class="inner_loader"></div>
            <div class="inner_loader"></div>
            <div class="inner_loader"></div>
            <div class="inner_loader"></div>
            <div class="inner_loader"></div>
        </div>
    </div>
}
else if (games.Count() == 0)
{
    <span>No games found!</span>
}
else
{
    <ul>
        @foreach (var game in games)
        {
            <li>@game.Name &nbsp;-&nbsp; @game.Description</li>
            // create a edit button
            <EditButton Id="@game.Id" />
        }
    </ul>
}

@code {
    private IEnumerable<Game> games;

    protected override async Task OnInitializedAsync()
    {
        await Task.Delay(500);
        games = _game.Entity.GetAll();
    }

}
